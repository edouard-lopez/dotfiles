[user]
    name = Edouard Lopez
    email = contact@edouard-lopez.com
	signingkey = 0F90A96C5FEB6076
[credential]
    helper = cache --timeout=3600

[alias]
    go = checkout
    st = status
    get-default-branch = "!f() { git remote show origin | grep 'HEAD branch' | cut -d' ' -f5; }; f"
    hist = log --graph --no-decorate --pretty=oneline --abbrev-commit
    hist-by = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    hist-all = log --all --graph --decorate --pretty=oneline --abbrev-commit
    k = !gitk --all &
    rebase-on-master = "!f() { current_branch=$(git rev-parse --abbrev-ref HEAD --); git checkout master; git pull origin master --rebase; git checkout $current_branch; git rebase master; }; f"
    rebase-and-push = "!f() { git pull --rebase && git push $@; }; f"
    rebase-all-on-master = "!f() { for branch in $(git branch --format='%(refname:short)'); do [ $branch = 'master' ] && continue; git checkout $branch && git rebase-on-master; done  }; f"
    delete-branch = "!f() { git checkout $(git get-default-branch); git branch --delete --force $@; }; f"
	new-branch-me = !git checkout -b
    new-branch = "!f() { git checkout $(git get-default-branch); git checkout -b $@; }; f"
    push-with-tags = "!f() { git push $@ ; git push --tags $@; }; f"
    fixup = "!sh -c '(git diff-files --quiet || (echo Unstaged changes, please commit or stash with --keep-index; exit 1)) && COMMIT=$(git rev-parse $1) && git commit --fixup=$COMMIT && git rebase -i --autosquash $COMMIT~1' -"


[color]
	ui = true
    branch = auto
    diff = auto
    interactive = auto
    status = auto
[apply]
    whitespace = nowarn
[core]
    edit = sublime-text-2
    excludes = ~/.gitexcludes
    excludesfile = ~/.gitignore
    autocrlf = input
	pager = diff-so-fancy | less --tabs=4 -RFX
    editor = vim
[merge]
    tool = meld
[gui]
    diffcontext = 2
	fontui = -family \"Noto Sans\" -size 12 -weight normal -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"Noto Sans\" -size 12 -weight normal -slant roman -underline 0 -overstrike 0
	tabsize = 4

[pager]
    log = diff-highlight | less
    show = diff-highlight | less
    diff = diff-highlight | less
[url "https://"]
[push]
	default = current

[guitool "Add to .gitignore"]
    cmd = echo \"\n$FILENAME\" >> .gitignore & git add .gitignore
    needsfile = yes
    confirm = yes

[guitool "Stash"]
    cmd = git stash
[guitool "Stash/show"]
    cmd = git stash show -p
[guitool "Stash/list"]
    cmd = git stash list
[guitool "Stash/pop"]
    cmd = git stash pop
[guitool "Stash/drop"]
    cmd = git stash drop
    confirm = yes
[guitool "Rebase onto... (non-interactive)"]
    cmd = git rebase $REVISION
    revprompt = yes
[guitool "Rebase/Current branch"]
    cmd = git rebase -i $(git merge-base $CUR_BRANCH master)
[guitool "Rebase/Interactive"]
    cmd = git rebase -i $REVISION
    revprompt = Revision
[guitool "Rebase/Interactive number"]
    cmd = git rebase -i HEAD~$ARGS
    argprompt = Number
[guitool "Rebase/Continue"]
    cmd = git rebase --continue
[guitool "Rebase/Skip commit"]
    cmd = git rebase --skip
    confirm = yes
[guitool "Rebase/Abort"]
    cmd = git rebase --abort
[guitool "Pull with Rebase"]
    cmd = git pull --rebase
[guitool "Status"]
    cmd = git status
[guitool "Revert/Revision"]
    cmd = git revert $REVISION
    revprompt = Revision
[guitool "Revert/Latest local"]
    cmd = git revert $(git rev-parse HEAD)
[guitool "Revert/Latest remote"]
    cmd = git revert $(git rev-parse origin/master)
[sequence]
	editor = vim
[guitool "Tag - List all"]
    cmd = git tag
[guitool "Tag - List pattern"]
    cmd = git tag -l \"$ARGS\"
    argprompt = yes
[guitool "Tag - Show"]
    cmd = git show $ARGS
    argprompt = yes
[guitool "Tag - Latest annotated tag"]
    cmd = git describe
[guitool "Tag - Latest tag"]
    cmd = git describe --tags
[guitool "Run git command"]
    cmd = git $ARGS
    argprompt = yes
[guitool "Run command"]
    cmd = $ARGS
    argprompt = yes
[guitool "Open .gitconfig"]
    cmd = "start ~/.gitconfig"
[guitool "Open file"]
    cmd = start $FILENAME
    noconsole = yes
    needsfile = yes
[commit]
	gpgsign = true
[gitreview]
	username = edouard-lopez
[credential "https://github.com"]
	helper = store
	username = edouard-lopez
[diff]
	noprefix = true
[pull]
	rebase = true
[rebase]
	autoStash = true
